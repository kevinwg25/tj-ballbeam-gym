(ctrl shift g is shortcut to go to source control on vscode)

PPO from: https://github.com/nikhilbarhate99/PPO-PyTorch/
Ballbeam from: https://github.com/simon-larsson/ballbeam-gym

get reward function working
angular velocity is set irl, not in code. does not model how an actual servo worksvelocity exceeds max_v??

rem to do: reward function import file, have default reward function (functionality)


notes:
- motor physical limitation
    - in update() of ballbeam.py, OA made note that "simulation could be improved further by using voltage as input and a motor simulation deciding theta"
    - insead of angular acceleration, more accurate to use torque
    - talk to dean about stepper motor from robolab (its a rotary encoder used in 3d printers, very good)
- make random initial velocity initialization robust (temporarily just a random number between 0,1 but this will change depending on unit conversion)
    - in base.py, since bb = BallBeam object hasn't yet been created, the random initial_velocity range is different from reset() when initializing. not a big problem, but it is something that culd be fixed
- maybe test around with max_ep_len for training, as it is currently 10x less than in testing. choose it to be a reasonable value for what we decide is the maximum waiting time for ball to balance
